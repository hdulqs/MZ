version: '3.3'
services:
  nginx:
   image: 192.168.1.102:5000/middleware/nginx:1.14.0
   hostname: middleware_nginx
   volumes:
   - /home/logs/nginx:/usr/local/nginx/logs
   ports:
   - 80:80
   - 443:443
   networks:
     - tp-net
   deploy:
     replicas: 1
     restart_policy:
       condition: on-failure
     placement:
       constraints:
       - node.labels.manage == 1
  redis1:
    image: 192.168.1.102:5000/middleware/redis:4.0.11
    hostname: middleware_redis1
    volumes:
    - /home/logs/redis1:/logs
    - /data/redis/1:/data
    ports:
    - 6379:6379
    networks:
    - tp-net
    command: ["/etc/redis.conf"]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
        - node.labels.manage == 1
  redis2:
    image: 192.168.1.102:5000/middleware/redis:4.0.11
    hostname: middleware_redis2
    volumes:
    - /home/logs/redis2:/logs
    - /data/redis/2:/data
    ports:
    - 6380:6379
    networks:
    - tp-net
    command: ["/etc/redis.conf"]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
        - node.labels.manage == 1
  zookeeper:
    image: 192.168.1.102:5000/middleware/zookeeper:3.4.13
    hostname: middleware_zookeeper
    volumes:
    - /home/logs/zookeeper:/datalog
    ports:
    - 2181:2181
    - 20901:20901
    - 20902:20902
    - 20903:20903
    - 20904:20904
    - 20905:20905
    networks:
      - tp-net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
        - node.labels.manage == 1
  rabbitmq:
    image: 192.168.1.102:5000/middleware/rabbitmq:3.7.8
    hostname: middleware_rabbitmq
    ports:
    - 5672:5672
    - 15672:15672
    networks:
    - tp-net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
        - node.labels.manage == 1
  dubbo-admin:
    image: 192.168.1.102:5000/middleware/dubbo-admin:0.0.1-SNAPSHOT
    hostname: middleware_dubbo
    ports:
    - 8080:8080
    networks:
    - tp-net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
        - node.labels.manage == 1
  node_index:
    image: 192.168.1.102:5000/middleware/node_index:1.0.0
    hostname: middleware_node_index
#    volumes:
#    - /home/logs/node_index:/logs
    ports:
    - 3000:3000
    networks:
    - tp-net
    depends_on:
    - zookeeper
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
        - node.labels.manage == 1
networks:
  tp-net:
    external: true